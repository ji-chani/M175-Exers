% Euler's Method for ODE
% find the solution to the IVP
% x' = f(t,x)
% x(a) = \alpha

clc
clear
close all

syms x t
%% Initializing global variables

% rhs function f(t,x) -------------
func = t/x;

% endpoints -------------
a = 0;
b = 5;

% initial value of x [x(a)] -------------
init_val = 1;

% step size -------------
h = 0.1;

% vector of t (independent var)
T = [a:h:b]';

% actual values of x
X = sqrt(T.^2 + 1);

%% Estimates for Xi's (Wi's)

% placeholder
W = zeros(size(T,1), 1);
rel_Error = zeros(size(T,1), 1);

% initial value
W(1) = init_val;

fprintf('i \t t_i \t\t w_i \t\t x_i \t\t rel error \n')
for i = 1:length(W)

    if i > 1
        % new estimate
        W(i) = W(i-1) + h*subs(func, {t, x}, [T(i-1), W(i-1)]);
    end

    % relative error of w_i wrt to actual x_i
    rel_Error(i) = abs(W(i) - X(i))/abs(X(i));

    % print per iteration
    if length(W) >= 30
        if (i > 11) && (i < length(W)-10)
            fprintf('\t\t\t\t\t\t S ... \n')
        else
            fp = [i-1, T(i), W(i), X(i), rel_Error(i)];
            fprintf('%d \t %4.6f \t %4.6f \t %4.4f \t %4.6e \n', fp)
        end
    else
        fp = [i-1, T(i), W(i), X(i), rel_Error(i)];
        fprintf('%d \t %4.6f \t %4.6f \t %4.4f \t %4.6e \n', fp)
    end

end

%% Relative Errors

% average rel error
AveRelerr = mean(rel_Error);

% L2 relative error
L2Relerr = norm(W-X,2)/norm(X,2);

rel = [AveRelerr, L2Relerr];
fprintf('AveRelerr = \n %0.4f \n\n L2Relerr = \n %0.4f \n\n', rel)

%% Plot

% exact solution
f = sqrt(t^2+1);
figure
hold on
grid on
scatter(T, W, 12, 'filled', 'k')
plot(T, W, 'k')
fplot(f, [min(T), max(T)], 'r')
legend('$(t_i,w_i)$', 'interpolated plot of $(t_i,w_i)$', 'exact solution', 'Interpreter', 'latex')
xlim([-0.5, 5.5])
ylim([0.5, 5.5])
